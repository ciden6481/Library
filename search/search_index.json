{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Functions &amp; Code Library","text":""},{"location":"#excel","title":"Excel","text":""},{"location":"#power-bi","title":"Power BI","text":""},{"location":"#dax","title":"DAX","text":""},{"location":"#reference","title":"Reference","text":""},{"location":"excel/excel-index/","title":"Excel","text":""},{"location":"excel/excel-index/#functions","title":"Functions","text":""},{"location":"excel/excel-index/#lambda","title":"Lambda","text":"<p>findandzero lambda function</p>"},{"location":"excel/findandzero/","title":"Findandzero","text":"<p>tags:     - lambda</p>"},{"location":"excel/findandzero/#find_and_zero","title":"find_and_zero","text":"<pre><code>LAMBDA(find,lookin,return,VALUE(IFNA(SUBSTITUTE(HSTACK(XLOOKUP(find, lookin, return), XLOOKUP(find, lookin, OFFSET(return, 0, 1))), \".\", 0), \"0\")));\n</code></pre>"},{"location":"powerquery/all_plans_by_latest_effdt/","title":"Replace academic plans","text":"<p>Code assumes that [all_plans_by_latest_effdt] has already been run</p> <pre><code>let\n    Source = Sql.Database(\"IAAS-INSTANTID\\CARDS\", \"DATA\"),\n    dbo_IR_ALL_PLANS = Source{[Schema=\"dbo\",Item=\"IR_ALL_PLANS\"]}[Data],\n    #\"Grouped Rows\" = Table.Group(dbo_IR_ALL_PLANS, {\"ACAD_PLAN\"}, {{\"latest\", each List.Max([EFFDT]), type datetime}, {\"all_rows\", each _, type table [INSTITUTION=text, ACAD_PLAN=text, EFFDT=datetime, EFF_STATUS=text, DESCR=nullable text, DESCRSHORT=nullable text, ACAD_PLAN_TYPE=nullable text, ACAD_PROG=nullable text, DEGREE=nullable text, DIPLOMA_DESCR=nullable text, DIPLOMA_PRINT_FL=nullable text, TRNSCR_DESCR=nullable text, TRNSCR_PRINT_FL=nullable text, FIRST_TERM_VALID=nullable text, CIP_CODE=nullable text, STUDY_FIELD=nullable text, SSR_LAST_ADM_TERM=nullable text, SSR_NSC_CRD_LVL=nullable text, SSR_PROG_LENGTH=nullable number, SSR_PROG_LEN_TYPE=nullable text]}}),\n    #\"Expanded all_rows\" = Table.ExpandTableColumn(#\"Grouped Rows\", \"all_rows\", {\"EFFDT\", \"EFF_STATUS\", \"DESCR\", \"DEGREE\"}, {\"EFFDT\", \"EFF_STATUS\", \"DESCR\", \"DEGREE\"}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded all_rows\", each [EFFDT] = [latest])\nin\n    #\"Filtered Rows\"\n</code></pre>"},{"location":"powerquery/powerquery-index/","title":"Functions","text":""},{"location":"powerquery/powerquery-index/#student-data","title":"Student data","text":""},{"location":"powerquery/powerquery-index/#replace-acad-plans","title":"Replace acad plans","text":""},{"location":"powerquery/powerquery-index/#get-correct-acadplan-info","title":"Get correct acadplan info","text":""},{"location":"powerquery/replace_acad_plan/","title":"Replace academic plans","text":"<p>Code assumes that [all_plans_by_latest_effdt] has already been run</p> <pre><code>//Replaces degree for old acadplans\n#\"Replaced Value\" = Table.ReplaceValue(Source,each [DEGREE], each if Text.StartsWith([DESCR],\"Liberal Arts\") then \"AA\" else if [DESCR] = \"Business Administration\" or [DESCR] = \"Science: Computer Science\" or [DESCR] = \"Education\" or [DESCR] = \"General Studies\" or [DESCR] = \"Science: Health Professions\" or [DESCR] = \"Gen Studies: Admin of Justice\" then \"AS\" else [DEGREE],Replacer.ReplaceText,{\"DEGREE\"}),\n\n//Replaces old acadplans with new names after degree has been fixed\n#\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",each [DESCR], each if [DESCR] = \"Gen Studies: Admin of Justice\" then \"Social Sci Criminal Justice\" else if [DESCR] = \"Science: Health Professions\" then \"Health Sciences\" else if [DESCR] = \"Science: Computer Science\" then \"Computer Science\" else [DESCR],Replacer.ReplaceText,{\"DESCR\"}),\n\n//Fixes null degree values\n#\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",null,\"Non-degree\",Replacer.ReplaceValue,{\"DEGREE\"})\n</code></pre>"}]}